// Code generated by MockGen. DO NOT EDIT.
// Source: greeter/greet.go

// Package greeter is a generated GoMock package.
package greeter

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGreeter is a mock of Greeter interface
type MockGreeter struct {
	ctrl     *gomock.Controller
	recorder *MockGreeterMockRecorder
}

// MockGreeterMockRecorder is the mock recorder for MockGreeter
type MockGreeterMockRecorder struct {
	mock *MockGreeter
}

// NewMockGreeter creates a new mock instance
func NewMockGreeter(ctrl *gomock.Controller) *MockGreeter {
	mock := &MockGreeter{ctrl: ctrl}
	mock.recorder = &MockGreeterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGreeter) EXPECT() *MockGreeterMockRecorder {
	return m.recorder
}

// SayHello mocks base method
func (m *MockGreeter) SayHello(name string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SayHello", name)
	ret0, _ := ret[0].(string)
	return ret0
}

// SayHello indicates an expected call of SayHello
func (mr *MockGreeterMockRecorder) SayHello(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SayHello", reflect.TypeOf((*MockGreeter)(nil).SayHello), name)
}
